on: [push, pull_request]
name: Build
jobs:
  docker:
    strategy:
      matrix:
        go-version: [1.16.x]
        goos: [linux]
        goarch: [amd64, arm64]
    runs-on: ubuntu-latest
    steps:
    - name: Install go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Run build
      run: make all
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
    - name: Packaging
      run: tar -zcvf paddleflow-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz output/
    - name: Uploading assets
      uses: actions/upload-artifact@v3
      with:
        name: paddleflow-${{ matrix.goos }}-${{ matrix.goarch }}
        path: paddleflow-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz

    - name: Get $EVENT_CONTEXT
      env:
        EVENT_CONTEXT: ${{ toJSON(github.event) }}
      run: |
        echo $EVENT_CONTEXT

    - name: Get branch name
      id: branch-name
      with:
        strip_tag_prefix: true
      env:
        strip_tag_prefix: true
      uses: tj-actions/branch-names@v6

    - name: echo branch
      run: |
        echo "base_ref_branch=${{ steps.branch-name.outputs.base_ref_branch }}"
        echo "current_branch=${{ steps.branch-name.outputs.current_branch }}"
        echo "default_branch=${{ steps.branch-name.outputs.default_branch }}"
        echo "head_ref_branch=${{ steps.branch-name.outputs.head_ref_branch }}"
        echo "is_default=${{ steps.branch-name.outputs.is_default }}"
        echo "is_tag=${{ steps.branch-name.outputs.is_tag }}"
        echo "ref_branch=${{ steps.branch-name.outputs.ref_branch }}"
        echo "tag=${{ steps.branch-name.outputs.tag }}"

    - name: get version-fragment and current-version
      run: |
        current_branch=${{ steps.branch-name.outputs.current_branch }}
        echo "version_fragment=alpha" >> $GITHUB_ENV

        if [ $current_branch == 'release.*' ]; then
          echo "version_fragment=rc" >> $GITHUB_ENV

          current_version=${$current_branch#*release}
          current_version=${current_version#*/}
          current_version=${current_version#*-}
          echo "current_version=$current_version" >> $GITHUB_ENV
        fi

        if [ !${{ steps.branch-name.outputs.is_tag }} ]; then
          echo "current branch without tag"
        else
          echo "current_version=$steps.branch-name.outputs.tag" >> $GITHUB_ENV
        fi

    - name: Bump release version
      if: ${{ steps.branch-name.outputs.is_tag == 'true' }}
      id: bump_version
      uses: christian-draeger/increment-semantic-version@1.0.2
      with:
        current-version: ${{ env.current_version }}
        version-fragment: ${{ env.version_fragment }}

    - if: ${{ steps.branch-name.outputs.is_tag == 'true' }}
      name: Do something with your bumped release version
      run: echo ${{ steps.bump_version.outputs.next-version }}


    - name: Set Image Tag Name, only dev and release
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        echo "tagname=null" >> $GITHUB_ENV
        current_branch=${{ steps.branch-name.outputs.current_branch }}
        base_repo=zzc932/db-crud-api

        if [ env.GOOS == 'arm.*' ]; then
          base_repo=$base_repo-$env.GOOS
        fi

        if [ !${{ steps.branch-name.outputs.is_tag }} ]; then
          echo "current branch $current_branch without tag"
          if [ env.version_fragment == 'alpha' ]; then
            echo "tagname=$base_repo:latest" >> $GITHUB_ENV
          fi

          if [ $current_branch == 'release.*' ]; then
            echo "tagname=$base_repo:$current_branch" >> $GITHUB_ENV
          fi

        else
          echo "tagname=$base_repo:$current_branch,$base_repo:${{ steps.bump_version.outputs.next-version }}" >> $GITHUB_ENV
        fi

    - name: print tagName
      run: |
        echo "tagname is ${{ env.tagname }}"

    - name: Login to DockerHub
      if: env.tagname!='null'
      uses: docker/login-action@v2
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      if: env.tagname!='null'
      uses: docker/build-push-action@v3
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      with:
        context: .
        file: ./installer/Dockerfile
        platforms: ${{ matrix.goarch }}
        push: true
        tags: ${{ env.tagname }}
