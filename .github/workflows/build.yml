on: [push, pull_request]
name: Build
jobs:
  docker:
    name: build CI
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [1.18.x]
        goos: [linux]
        goarch: [amd64]
    steps:
      - name: Install go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run build
        run: make all
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
      - name: Packaging
        run: tar -zcvf paddleflow-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz output/
      - name: Uploading assets
        uses: actions/upload-artifact@v3
        with:
          name: paddleflow-${{ matrix.goos }}-${{ matrix.goarch }}
          path: paddleflow-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz

      - id: branch-name
        name: Get branch name
        with:
          strip_tag_prefix: true
        env:
          strip_tag_prefix: true
        uses: tj-actions/branch-names@v6
      - name: print is_tag and tag
        run: |
          echo "is_tag=${{ steps.branch-name.outputs.is_tag }}"
          echo "tag=${{ steps.branch-name.outputs.tag }}"
          echo "当前分支为 ${{ steps.branch-name.outputs.base_ref_branch }}"


      - id: commit
        uses: pr-mpt/actions-commit-hash@v2
      - run: |
          echo "${{ steps.commit.outputs.short }}"


      - name: get build-image-enabled, version-fragment and current-version
        run: |
          current_branch=${{ steps.branch-name.outputs.base_ref_branch }}
          echo "current_branch is [$current_branch]"
          event_name=${{ github.event_name }}
          build_image_enabled=false

          if [[ $current_branch =~ ^(release|dev|master|main).* ]];then
            echo "current_branch is [$current_branch]"
            if [[ $event_name == 'push' ]]; then
            echo "event_name is [$event_name]"
            build_image_enabled=true
            fi
          fi

          echo "打印build_image_enabled值 [$build_image_enabled] 并存储到环境变量"
          echo "build_image_enabled=$build_image_enabled" >> $GITHUB_ENV
          echo "计算版本tag cur_version"
          echo "version_fragment=alpha" >> $GITHUB_ENV
          if [[ $current_branch =~ ^release.* ]]; then
            echo "version_fragment=rc" >> $GITHUB_ENV
            cur_version=${current_branch#*release}
            cur_version=${cur_version#*/}
            cur_version=${cur_version#*-}
            echo "cur_version is [$cur_version]"
            echo "cur_version=$cur_version" >> $GITHUB_ENV
          fi

          if [ !${{ steps.branch-name.outputs.is_tag }} ]; then
            echo "current branch without tag"
          else
            echo "cur_version is [$steps.branch-name.outputs.tag]"
            echo "cur_version=$steps.branch-name.outputs.tag" >> $GITHUB_ENV
          fi

      - name: Set Image Tag Name, only dev and release
        if: env.build_image_enabled=='true'
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          BASE_REPO: zzc932
          PF_SERVER: db_crud_api

        run: |
          echo "tagname=null" >> $GITHUB_ENV
          current_branch=${{ env.cur_version }}

          # paddleflow-server
          ps_repo=${{ env.BASE_REPO }}/${{ env.PF_SERVER }}

          arch=${{ matrix.goarch }}
          if [[ !($arch =~ amd.*) ]]; then
          ps_repo=$ps_repo-$arch
          fi

          echo "tagname=$ps_repo:$current_branch,$ps_repo:$current_branch-${{ steps.commit.outputs.short }}"
          echo "tagname=$ps_repo:$current_branch,$ps_repo:$current_branch-${{ steps.commit.outputs.short }}" >> $GITHUB_ENV


    - name: Login to DockerHub
      if: env.tagname!='null' && env.build_image_enabled=='true'
      uses: docker/login-action@v2
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      if: env.tagname!='null' && env.build_image_enabled=='true'
      uses: docker/build-push-action@v3
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      with:
        context: .
        file: ./installer/Dockerfile
        platforms: ${{ matrix.goarch }}
        push: true
        tags: ${{ env.tagname }}
